{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/WORK/new_creation/lib/config.ts"],"sourcesContent":["const config = {\r\n  env: {\r\n    apiEndpoint: process.env.NEXT_PUBLIC_API_ENDPOINT!,\r\n    prodApiEndpoint: process.env.NEXT_PUBLIC_PROD_API_ENDPOINT!,\r\n    imagekit: {\r\n      publicKey: process.env.NEXT_PUBLIC_IMAGEKIT_PUBLIC_KEY!,\r\n      urlEndpoint: process.env.NEXT_PUBLIC_IMAGEKIT_URL_ENDPOINT!,\r\n      privateKey: process.env.IMAGEKIT_PRIVATE_KEY!,\r\n    },\r\n    databaseUrl: process.env.DATABASE_URL!,\r\n    upstash: {\r\n      redisUrl: process.env.UPSTASH_REDIS_URL!,\r\n      redisToken: process.env.UPSTASH_REDIS_TOKEN!,\r\n      qstashUrl: process.env.QSTASH_URL!,\r\n      qstashToken: process.env.QSTASH_TOKEN!,\r\n    },\r\n    resendToken: process.env.RESEND_TOKEN!,\r\n  },\r\n};\r\n\r\nexport default config;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACb,KAAK;QACH,WAAW;QACX,eAAe;QACf,UAAU;YACR,SAAS;YACT,WAAW;YACX,YAAY,QAAQ,GAAG,CAAC,oBAAoB;QAC9C;QACA,aAAa,QAAQ,GAAG,CAAC,YAAY;QACrC,SAAS;YACP,UAAU,QAAQ,GAAG,CAAC,iBAAiB;YACvC,YAAY,QAAQ,GAAG,CAAC,mBAAmB;YAC3C,WAAW,QAAQ,GAAG,CAAC,UAAU;YACjC,aAAa,QAAQ,GAAG,CAAC,YAAY;QACvC;QACA,aAAa,QAAQ,GAAG,CAAC,YAAY;IACvC;AACF;uCAEe"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/WORK/new_creation/database/drizzle.ts"],"sourcesContent":["import config from \"@/lib/config\";\nimport { drizzle } from \"drizzle-orm/neon-http\";\nimport { neon } from \"@neondatabase/serverless\";\n\nconst sql = neon(config.env.databaseUrl);\n\nexport const db = drizzle(sql);"],"names":[],"mappings":";;;AAAA;AAEA;AADA;;;;AAGA,MAAM,MAAM,CAAA,GAAA,wJAAA,CAAA,OAAI,AAAD,EAAE,+GAAA,CAAA,UAAM,CAAC,GAAG,CAAC,WAAW;AAEhC,MAAM,KAAK,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD,EAAE"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/WORK/new_creation/database/schema.ts"],"sourcesContent":["import {\n  varchar,\n  uuid,\n  integer,\n  text,\n  pgTable,\n  date,\n  pgEnum,\n  timestamp,\n} from \"drizzle-orm/pg-core\";\n\nexport const STATUS_ENUM = pgEnum(\"status\", [\n  \"PENDING\",\n  \"APPROVED\",\n  \"REJECTED\",\n]);\nexport const ROLE_ENUM = pgEnum(\"role\", [\"USER\", \"ADMIN\"]);\n\nexport const users = pgTable(\"users\", {\n  id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\n  fullName: varchar(\"full_name\", { length: 255 }).notNull(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  phone: varchar(\"phone\", { length: 20 }),\n  downloads: integer(\"downloads\").notNull().default(0),\n  status: STATUS_ENUM(\"status\").default(\"PENDING\"),\n  role: ROLE_ENUM(\"role\").default(\"USER\"),\n  lastActivityDate: date(\"last_activity_date\").defaultNow(),\n  createdAt: timestamp(\"created_at\", {\n    withTimezone: true,\n  }).defaultNow(),\n});\n\nexport const books = pgTable(\"books\", {\n  id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  author: varchar(\"author\", { length: 255 }).notNull(),\n  category: text(\"category\").notNull(),\n  coverUrl: text(\"cover_url\").notNull(),\n  coverColor: varchar(\"cover_color\", { length: 7 }).notNull(),\n  description: text(\"description\").notNull(),\n  summary: varchar(\"summary\").notNull(),\n  fileUrl: text(\"file_url\").notNull(), \n  createdAt: timestamp(\"created_at\", { withTimezone: true }).defaultNow(),\n});\n\nexport const articles = pgTable(\"articles\", {\n  id: uuid(\"id\").notNull().primaryKey().defaultRandom().unique(),\n  title: varchar(\"title\", { length: 255 }).notNull(),\n  author: varchar(\"author\", { length: 255 }).notNull(),\n  summary: varchar(\"summary\", { length: 500 }).notNull(),\n  content: text(\"content\").notNull(),\n  coverUrl: text(\"cover_url\").notNull(),\n  createdAt: timestamp(\"created_at\", { withTimezone: true }).defaultNow(),\n});\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Desktop/WORK/new_creation/app/api/download/%5BbookId%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { db } from \"@/database/drizzle\";\r\nimport { books } from \"@/database/schema\";\r\nimport { eq } from \"drizzle-orm\";\r\n\r\nexport async function GET(req: NextRequest, { params }: { params: { bookId: string } }) {\r\n  const { bookId } = params;\r\n  // Fetch the book by ID\r\n  const [book] = await db.select().from(books).where(eq(books.id, bookId)).limit(1);\r\n  if (!book) {\r\n    return new NextResponse(\"Book not found\", { status: 404 });\r\n  }\r\n  // Redirect to the fileUrl (could also stream if you want to hide the URL)\r\n  return NextResponse.redirect(book.fileUrl);\r\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,IAAI,GAAgB,EAAE,EAAE,MAAM,EAAkC;IACpF,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,uBAAuB;IACvB,MAAM,CAAC,KAAK,GAAG,MAAM,qHAAA,CAAA,KAAE,CAAC,MAAM,GAAG,IAAI,CAAC,oHAAA,CAAA,QAAK,EAAE,KAAK,CAAC,CAAA,GAAA,oKAAA,CAAA,KAAE,AAAD,EAAE,oHAAA,CAAA,QAAK,CAAC,EAAE,EAAE,SAAS,KAAK,CAAC;IAC/E,IAAI,CAAC,MAAM;QACT,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,kBAAkB;YAAE,QAAQ;QAAI;IAC1D;IACA,0EAA0E;IAC1E,OAAO,gIAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,KAAK,OAAO;AAC3C"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}